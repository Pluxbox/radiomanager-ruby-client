=begin
#RadioManager

#This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.

The version of the OpenAPI document: 2.0
Contact: support@pluxbox.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.1

=end

require 'spec_helper'
require 'json'

# Unit tests for RadioManagerClient::BlockApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'BlockApi' do
  before do
    # run before each test
    @api_instance = RadioManagerClient::BlockApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BlockApi' do
    it 'should create an instance of BlockApi' do
      expect(@api_instance).to be_instance_of(RadioManagerClient::BlockApi)
    end
  end

  # unit tests for get_block_by_id
  # Get block by id
  # Get block by id
  # @param id ID of Block **(Required)**
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :_external_station_id Query on a different (content providing) station *(Optional)*
  # @return [BlockResult]
  describe 'get_block_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_current_block
  # Get current Block
  # Get currently playing Block
  # @param [Hash] opts the optional parameters
  # @return [BlockResult]
  describe 'get_current_block test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_next_block
  # Get upcoming Block
  # Get currently upcoming Block
  # @param [Hash] opts the optional parameters
  # @return [BlockResult]
  describe 'get_next_block test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_blocks
  # Get a list of all blocks currently in your station.
  # Get a list of all blocks currently in your station. This feature supports pagination and will give a maximum of 50 blocks back.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :broadcast_id Search on Broadcast ID *(Optional)* &#x60;(Relation)&#x60;
  # @option opts [Integer] :item_id Search on Item ID *(Optional)* &#x60;(Relation)&#x60;
  # @option opts [Integer] :program_id Search on Program ID *(Optional)* &#x60;(Relation)&#x60;
  # @option opts [Time] :start_min Minimum start date *(Optional)*
  # @option opts [Time] :start_max Maximum start date *(Optional)*
  # @option opts [Integer] :page Current page *(Optional)*
  # @option opts [Integer] :limit Results per page *(Optional)*
  # @option opts [String] :order_by Field to order the results *(Optional)*
  # @option opts [String] :order_direction Direction of ordering *(Optional)*
  # @option opts [Integer] :_external_station_id Query on a different (content providing) station *(Optional)*
  # @return [InlineResponse200]
  describe 'list_blocks test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
