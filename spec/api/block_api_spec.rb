=begin
#RadioManager

#RadioManager

OpenAPI spec version: 2.0
Contact: support@pluxbox.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require 'spec_helper'
require 'json'

# Unit tests for RadioManagerClient::BlockApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'BlockApi' do
  before do
    # run before each test
    @instance = RadioManagerClient::BlockApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BlockApi' do
    it 'should create an instance of BlockApi' do
      expect(@instance).to be_instance_of(RadioManagerClient::BlockApi)
    end
  end

  # unit tests for get_block_by_id
  # Get block by id
  # Get block by id
  # @param id ID of Block **(Required)**
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :_external_station_id Query on a different (content providing) station *(Optional)*
  # @return [BlockResult]
  describe 'get_block_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_current_block
  # Get current Block
  # Get current Block
  # @param [Hash] opts the optional parameters
  # @return [BlockResult]
  describe 'get_current_block test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_next_block
  # Get next Block
  # Get next Block
  # @param [Hash] opts the optional parameters
  # @return [BlockResult]
  describe 'get_next_block test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_blocks
  # Get a list of all blocks currently in your station.
  # Get a list of all blocks currently in your station. This feature supports pagination and will give a maximum of 50 blocks back.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Current page *(Optional)*
  # @option opts [DateTime] :start_min Minimum start date *(Optional)*
  # @option opts [DateTime] :start_max Maximum start date *(Optional)*
  # @option opts [Integer] :broadcast_id Search on Broadcast ID *(Optional)* &#x60;(Relation)&#x60;
  # @option opts [Integer] :program_id Search on Program ID *(Optional)* &#x60;(Relation)&#x60;
  # @option opts [Integer] :item_id Search on Item ID *(Optional)* &#x60;(Relation)&#x60;
  # @option opts [Integer] :_external_station_id Query on a different (content providing) station *(Optional)*
  # @return [BlockResults]
  describe 'list_blocks test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
