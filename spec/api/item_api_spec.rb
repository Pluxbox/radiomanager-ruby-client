=begin
#RadioManager

#This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.

The version of the OpenAPI document: 2.0
Contact: support@pluxbox.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.1

=end

require 'spec_helper'
require 'json'

# Unit tests for RadioManagerClient::ItemApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ItemApi' do
  before do
    # run before each test
    @api_instance = RadioManagerClient::ItemApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ItemApi' do
    it 'should create an instance of ItemApi' do
      expect(@api_instance).to be_instance_of(RadioManagerClient::ItemApi)
    end
  end

  # unit tests for create_item
  # Create an new item.
  # Create item.
  # @param item_data_input Data **(Required)**
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2002]
  describe 'create_item test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for current_item_post_structure
  # Post a current playing item, keep structure
  # Post current playing Item. Can be existing Item referenced by external_id. When Items are moved, this function **will attempt to** keep Items&#39; ModelType structure in rundown.
  # @param import_item Data **(Required)**
  # @param [Hash] opts the optional parameters
  # @return [ItemResult]
  describe 'current_item_post_structure test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for current_item_post_timing
  # Post current playing Item
  # Post current playing Item. Can be existing Item referenced by external_id. When Items are moved, this function **will not keep** Items&#39; ModelType structure in rundown.
  # @param import_item Data **(Required)**
  # @param [Hash] opts the optional parameters
  # @return [ItemResult]
  describe 'current_item_post_timing test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_item_by_id
  # Delete item by ID.
  # Delete item by id.
  # @param id ID of Item **(Required)**
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_item_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_current_item
  # Get current Item
  # Get current Item
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :lastplayed Show last played item if there is no current item*(Optional)*
  # @return [ItemResult]
  describe 'get_current_item test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_item_by_id
  # Get extended item details by ID.
  # Read item by id.
  # @param id ID of Item **(Required)**
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :_external_station_id Query on a different (content providing) station *(Optional)*
  # @return [ItemResult]
  describe 'get_item_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_items
  # Get a list of all the items currently in your station.
  # Get a list of all the items currently in your station. This feature supports pagination and will give a maximum results of 50 items back.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :block_id Search on Block ID *(Optional)* &#x60;(Relation)&#x60;
  # @option opts [Integer] :broadcast_id Search on Broadcast ID *(Optional)* &#x60;(Relation)&#x60;
  # @option opts [Integer] :model_type_id Search on ModelType ID *(Optional)* &#x60;(Relation)&#x60;
  # @option opts [Integer] :tag_id Search on Tag ID *(Optional)* &#x60;(Relation)&#x60;
  # @option opts [Integer] :campaign_id Search on Campaign ID *(Optional)* &#x60;(Relation)&#x60;
  # @option opts [Integer] :contact_id Search on Contact ID *(Optional)* &#x60;(Relation)&#x60;
  # @option opts [Integer] :program_draft_id Search on Program Draft ID *(Optional)*
  # @option opts [Integer] :user_draft_id Search on User Draft ID *(Optional)*
  # @option opts [Integer] :station_draft_id Search on Station Draft ID *(Optional)*
  # @option opts [Integer] :program_id Search on Program ID *(Optional)* &#x60;(Relation)&#x60;
  # @option opts [String] :external_id Search on External ID *(Optional)*
  # @option opts [Integer] :duration_min Minimum duration (seconds) *(Optional)*
  # @option opts [Integer] :duration_max Maximum duration (seconds) *(Optional)*
  # @option opts [String] :status Play Status of item *(Optional)*
  # @option opts [Time] :start_min Minimum start date *(Optional)*
  # @option opts [Time] :start_max Maximum start date *(Optional)*
  # @option opts [Integer] :page Current page *(Optional)*
  # @option opts [Integer] :limit Results per page *(Optional)*
  # @option opts [String] :order_by Field to order the results *(Optional)*
  # @option opts [String] :order_direction Direction of ordering *(Optional)*
  # @option opts [Integer] :_external_station_id Query on a different (content providing) station *(Optional)*
  # @return [InlineResponse2008]
  describe 'list_items test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for playlist_post_merge
  # Post a playlist, do not remove previously imported items
  # Post a playlist with &#39;keep structure&#39; method, but do not remove previously imported items
  # @param playlist_merge_body Data *(Required)*
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2021]
  describe 'playlist_post_merge test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for playlist_post_structure
  # Post a playlist, keep current structure
  # Post a playlist for a block. Existing Items can referenced by external_id. When Items are moved, this function **will attempt to** keep Items&#39; ModelType structure in rundown.
  # @param playlist_structure_body Data *(Required)*
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2021]
  describe 'playlist_post_structure test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for playlist_post_timing
  # Post a playlist
  # Post a playlist for a block. Existing Items can referenced by external_id. When Items are moved, this function **will not** keep Items&#39; ModelType structure in rundown.
  # @param playlist_timing_body Data *(Required)*
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2021]
  describe 'playlist_post_timing test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for stop_current_item
  # Stop an Item
  # Set a current playing or specific item on played
  # @param [Hash] opts the optional parameters
  # @option opts [ItemsStopcurrentBody] :items_stopcurrent_body Data *(Optional)*
  # @return [InlineResponse202]
  describe 'stop_current_item test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_item_by_id
  # Update extended item details by ID.
  # Update item by id.
  # @param id ID of Item **(Required)**
  # @param item_data_input Data *(Optional)*
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse202]
  describe 'update_item_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
